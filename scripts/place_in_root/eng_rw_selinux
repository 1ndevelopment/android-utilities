export PATH="/data/adb/magisk:/system/bin:$PATH"

alias su="/system/bin/magisk su"
alias getprop="/system/bin/getprop"
alias resetprop="/system/bin/resetprop -n"
alias ps="busybox ps"
alias grep="busybox grep"
alias kill="busybox kill"
alias awk="busybox awk"
alias rm="busybox rm"
alias mount="busybox mount"
alias sed="busybox sed"

echo ""
echo "======================="
echo "| Current Properties: |"
echo "======================="
echo ""
echo "ro.secure: $(getprop ro.secure)"
echo "ro.adb.secure: $(getprop ro.adb.secure)"
echo "service.adb.root: $(getprop service.adb.root)"
echo "ro.debuggable: $(getprop ro.debuggable)"
echo "ro.kernel.android.checkjni: $(getprop ro.kernel.android.checkjni)"
echo "ro.build.type: $(getprop ro.build.type)"
echo "ro.odm.build.type: $(su -c "getprop ro.odm.build.type")"
echo "ro.system.build.type: $(getprop ro.system.build.type)"
echo "ro.vendor.build.type: $(getprop ro.vendor.build.type)"
echo "ro.product.build.type: $(getprop ro.product.build.type)"
echo "ro.build.flavor: $(getprop ro.build.flavor)"
echo "ro.build.description: $(getprop ro.build.description)"
echo "ro.build.version.base_os: $(getprop ro.build.version.base_os)"
echo "ro.build.fingerprint: $(getprop ro.build.fingerprint)"
echo "ro.bootimage.build.fingerprint: $(su -c "getprop ro.bootimage.build.fingerprint")"
echo "ro.odm.build.fingerprint: $(getprop ro.odm.build.fingerprint)"
echo "ro.system.build.fingerprint: $(getprop ro.system.build.fingerprint)"
echo "ro.vendor.build.fingerprint: $(getprop ro.vendor.build.fingerprint)"
echo "ro.product.build.fingerprint: $(getprop ro.product.build.fingerprint)"
echo "ro.build.tags: $(getprop ro.build.tags)"
echo "ro.odm.build.tags: $(su -c "getprop ro.odm.build.tags")"
echo "ro.system.build.tags: $(getprop ro.system.build.tags)"
echo "ro.vendor.build.tags: $(getprop ro.vendor.build.tags)"
echo "ro.product.build.tags: $(getprop ro.product.build.tags)"
echo "persist.service.debuggable: $(getprop persist.service.debuggable)"
echo "persist.service.adb.enable: $(getprop persist.service.adb.enable)"
echo "debug.enable: $(getprop debug.enable)"
echo ""

echo ""
echo "=================="
echo "|    Enabling    |"
echo "| Engineer Props |"
echo "=================="
echo ""

su -c "resetprop ro.secure 0"
su -c "resetprop ro.adb.secure 0"
su -c "resetprop service.adb.root 1"
su -c "resetprop ro.debuggable 1"
su -c "resetprop ro.kernel.android.checkjni 1"

su -c "resetprop ro.build.type eng"
su -c "resetprop ro.odm.build.type eng"
su -c "resetprop ro.system.build.type eng"
su -c "resetprop ro.vendor.build.type eng"
su -c "resetprop ro.product.build.type eng"

RO_BUILD_FLAVOR="$(getprop ro.build.flavor | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_BUILD_DESCRIPTION="$(getprop ro.build.description | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_BUILD_VERSION_BASE_OS="$(getprop ro.build.version.base_os | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_BUILD_FINGERPRINT="$(getprop ro.build.fingerprint | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_BOOTIMAGE_BUILD_FINGERPRINT="$(su -c "getprop ro.bootimage.build.fingerprint | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g'")"
RO_ODM_BUILD_FINGERPRINT="$(getprop ro.odm.build.fingerprint | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_SYSTEM_BUILD_FINGERPRINT="$(getprop ro.system.build.fingerprint | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_VENDOR_BUILD_FINGERPRINT="$(getprop ro.vendor.build.fingerprint | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_PRODUCT_BUILD_FINGERPRINT="$(getprop ro.product.build.fingerprint | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_BUILD_TAGS="$(getprop ro.build.tags | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_ODM_BUILD_TAGS="$(su -c "getprop ro.odm.build.tags | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g'")"
RO_SYSTEM_BUILD_TAGS="$(getprop ro.system.build.tags | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_VENDOR_BUILD_TAGS="$(getprop ro.vendor.build.tags | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"
RO_PRODUCT_BUILD_TAGS="$(getprop ro.product.build.tags | sed -e 's/userdebug/eng/g' -e 's/user/eng/g' -e 's/release-keys/test-keys/g')"

su -c "resetprop ro.build.flavor $RO_BUILD_FLAVOR"
su -c "resetprop ro.build.description '$RO_BUILD_DESCRIPTION'"
su -c "resetprop ro.build.version.base_os $RO_BUILD_VERSION_BASE_OS"
su -c "resetprop ro.build.fingerprint $RO_BUILD_FINGERPRINT"
su -c "resetprop ro.bootimage.build.fingerprint $RO_BOOTIMAGE_BUILD_FINGERPRINT"
su -c "resetprop ro.odm.build.fingerprint $RO_ODM_BUILD_FINGERPRINT"
su -c "resetprop ro.system.build.fingerprint $RO_SYSTEM_BUILD_FINGERPRINT"
su -c "resetprop ro.vendor.build.fingerprint $RO_VENDOR_BUILD_FINGERPRINT"
su -c "resetprop ro.product.build.fingerprint $RO_PRODUCT_BUILD_FINGERPRINT"

su -c "resetprop ro.build.tags $RO_BUILD_TAGS"
su -c "resetprop ro.odm.build.tags $RO_ODM_BUILD_TAGS"
su -c "resetprop ro.system.build.tags $RO_SYSTEM_BUILD_TAGS"
su -c "resetprop ro.vendor.build.tags $RO_VENDOR_BUILD_TAGS"
su -c "resetprop ro.product.build.tags $RO_PRODUCT_BUILD_TAGS"

su -c "resetprop persist.service.debuggable 1"
su -c "resetprop persist.service.adb.enable 1"
su -c "resetprop debug.enable true"

echo ""
echo "============"
echo "| ! Done ! |"
echo "============"
echo ""

echo ""
echo "==========================="
echo "| Remounting rootfs as RW |"
echo "|                         |"
su -c "mount -o remount,rw /"
echo "| / is now RW!            |"
echo "|                         |"
su -c "mount -o remount,rw /product"
echo "| /product is now RW!     |"
echo "|                         |"
su -c "mount -o remount,rw /vendor"
echo "| /vendor is now RW!      |"
echo "|                         |"
su -c "mount -o remount,rw /system/bin"
echo "| /system/bin is now RW!  |"
echo "|                         |"
echo "==========================="
echo ""

echo ""
echo "============"
echo "| ! Done ! |"
echo "============"
echo ""

echo ""
echo "============"
echo "| Enabling |"
echo "| ADB Root |"
echo "|  Access  |"
echo "============"
echo ""

su -c "magiskpolicy --live 'allow adbd adbd process setcurrent' "
su -c "magiskpolicy --live 'allow adbd su process dyntransition' "
su -c "magiskpolicy --live 'permissive { su }' "
su -c "ps -A | grep adbd" | awk '{print $2}' >> /data/data/com.termux/adbd.pid.tmp && su -c "kill -9 $(cat /data/data/com.termux/adbd.pid.tmp)" && rm /data/data/com.termux/adbd.pid.tmp

echo ""
su -c "magiskpolicy --print-rules | grep 'adbd adbd process' "
echo ""
su -c "magiskpolicy --print-rules | grep 'adbd su process' "
echo ""
su -c "magiskpolicy --print-rules | grep 'permissive su' "
echo ""

echo ""
echo "============"
echo "| ! Done ! |"
echo "============"
echo ""

echo ""
echo "======================="
echo "| Properties changed: |"
echo "======================="
echo ""
echo "ro.secure: $(getprop ro.secure)"
echo "ro.adb.secure: $(getprop ro.adb.secure)"
echo "service.adb.root: $(getprop service.adb.root)"
echo "ro.debuggable: $(getprop ro.debuggable)"
echo "ro.kernel.android.checkjni: $(getprop ro.kernel.android.checkjni)"
echo "ro.build.type: $(getprop ro.build.type)"
echo "ro.odm.build.type: $(su -c "getprop ro.odm.build.type")"
echo "ro.system.build.type: $(getprop ro.system.build.type)"
echo "ro.vendor.build.type: $(getprop ro.vendor.build.type)"
echo "ro.product.build.type: $(getprop ro.product.build.type)"
echo "ro.build.flavor: $(getprop ro.build.flavor)"
echo "ro.build.description: $(getprop ro.build.description)"
echo "ro.build.version.base_os: $(getprop ro.build.version.base_os)"
echo "ro.build.fingerprint: $(getprop ro.build.fingerprint)"
echo "ro.bootimage.build.fingerprint: $(su -c "getprop ro.bootimage.build.fingerprint")"
echo "ro.odm.build.fingerprint: $(getprop ro.odm.build.fingerprint)"
echo "ro.system.build.fingerprint: $(getprop ro.system.build.fingerprint)"
echo "ro.vendor.build.fingerprint: $(getprop ro.vendor.build.fingerprint)"
echo "ro.product.build.fingerprint: $(getprop ro.product.build.fingerprint)"
echo "ro.build.tags: $(getprop ro.build.tags)"
echo "ro.odm.build.tags: $(su -c "getprop ro.odm.build.tags")"
echo "ro.system.build.tags: $(getprop ro.system.build.tags)"
echo "ro.vendor.build.tags: $(getprop ro.vendor.build.tags)"
echo "ro.product.build.tags: $(getprop ro.product.build.tags)"
echo "persist.service.debuggable: $(getprop persist.service.debuggable)"
echo "persist.service.adb.enable: $(getprop persist.service.adb.enable)"
echo "debug.enable: $(getprop debug.enable)"
echo ""

echo ""
echo "===================================="
echo "| Enabling Custom SELinux Contexts |"
echo "===================================="
echo ""

su -c "magiskpolicy --live 'allow untrusted_app_27 * * {*}'"
su -c "magiskpolicy --live 'allow system_server * * {*}'"
su -c "magiskpolicy --live 'allow system_suspend * * {*}'"
su -c "magiskpolicy --live 'allow mtk_hal_nvramagent * * {*}'"
su -c "magiskpolicy --live 'allow magisk * * {*}'"
su -c "magiskpolicy --live 'allow system_app * * {*}'"
su -c "magiskpolicy --live 'allow mnld * * {*}'"
su -c "magiskpolicy --live 'allow platform_app * * {*}'"
su -c "magiskpolicy --live 'allow untrusted_app * * {*}'"
su -c "magiskpolicy --live 'allow untrusted_app_29 * * {*}'"
su -c "magiskpolicy --live 'allow priv_app * * {*}'"

su -c "magiskpolicy --live 'allow untrusted_app_30 * * {*}'"
su -c "magiskpolicy --live 'allow untrusted_app_25 * * {*}'"
su -c "magiskpolicy --live 'allow audioserver * * {*}'"
su -c "magiskpolicy --live 'allow crash_dump * * {*}'"

su -c "magiskpolicy --live 'allow su * * {*}'"
su -c "magiskpolicy --live 'allow mediaserver * * {*}'"
su -c "magiskpolicy --live 'allow hwservicemanager * * {*}'"
su -c "magiskpolicy --live 'allow mtk_hal_c2 * * {*}'"
su -c "magiskpolicy --live 'allow surfaceflinger * * {*}'"
su -c "magiskpolicy --live 'allow mediaswcodec * * {*}'"
su -c "magiskpolicy --live 'allow shell * * {*}'"

echo ""
echo "============"
echo "| ! Done ! |"
echo "============"
echo ""
